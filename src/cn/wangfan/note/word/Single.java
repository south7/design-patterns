package cn.wangfan.note.word;
/**
 * 单例模式
 * @author wangfan
 *
 */
public class Single {
/**
 * 概念:在它的核心结构中包含一个被称为单例的特殊类
 * 特点:
 *     单例只有一个特殊实例（构造方法限定为private避免了类在外部被实例化）
 *     单例类必须自己创建自己的唯一实例
 *     单例类必须给所有其他对象提供这一实例
 *     
 *实现单例模式：
 *     1.懒汉式单例（立即加载方式）
 *       解释：在类加载时就完成了初始化
 *           饿汉式单例在类加载初始化时就创建好一个静态的对象供外部使用，除非系统重启，
 *           这个对象不会改变，所以本身就是线程安全的。
 *       
 *     2.懒汉式单例（延迟加载方式）
 *       解释：在类加载时不初始化
 *     3.静态内部类实现
 *     
 *单例模式分析：
 *   优点：在内存里只有一个实例，减少了内存的开销，尤其是频繁的创建和销毁实例
 *        避免对资源的多重占用（比如写文件操作）
 *   缺点：扩展困难（不可继承，原因构造方法私有）
 *   
 *   应用场景：
 *        1.web中的计数器，不用每次刷新都在数据库里加一次，用单例先缓存起来
 *        2.创建的一个对象需要消耗的资源过多，比如I/O与数据库的链接
 */
}
